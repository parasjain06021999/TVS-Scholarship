import { PaymentsService } from './payments.service';
export declare class PaymentsController {
    private readonly paymentsService;
    constructor(paymentsService: PaymentsService);
    createPayment(body: any, req: any): Promise<{
        success: boolean;
        message: string;
        data: {
            application: {
                student: {
                    email: string | null;
                    firstName: string;
                    lastName: string;
                    dateOfBirth: Date;
                    gender: import(".prisma/client").$Enums.Gender;
                    phone: string | null;
                    address: string;
                    city: string;
                    state: string;
                    pincode: string;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    country: string;
                    aadharNumber: string | null;
                    panNumber: string | null;
                    fatherName: string;
                    fatherOccupation: string | null;
                    motherName: string;
                    motherOccupation: string | null;
                    familyIncome: number | null;
                    emergencyContact: string | null;
                    profileImage: string | null;
                    isVerified: boolean;
                    userId: string;
                };
                scholarship: {
                    id: string;
                    isActive: boolean;
                    createdAt: Date;
                    updatedAt: Date;
                    title: string;
                    description: string;
                    eligibilityCriteria: string;
                    amount: number;
                    maxAmount: number | null;
                    category: import(".prisma/client").$Enums.ScholarshipCategory;
                    subCategory: string | null;
                    applicationStartDate: Date;
                    applicationEndDate: Date;
                    academicYear: string;
                    maxApplications: number | null;
                    currentApplications: number;
                    requirements: import("@prisma/client/runtime/library").JsonValue | null;
                    documentsRequired: string[];
                    priority: number;
                    createdBy: string;
                };
            } & {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                studentId: string;
                scholarshipId: string;
                status: import(".prisma/client").$Enums.ApplicationStatus;
                applicationData: import("@prisma/client/runtime/library").JsonValue;
                academicInfo: import("@prisma/client/runtime/library").JsonValue | null;
                familyInfo: import("@prisma/client/runtime/library").JsonValue | null;
                financialInfo: import("@prisma/client/runtime/library").JsonValue | null;
                additionalInfo: import("@prisma/client/runtime/library").JsonValue | null;
                reviewerNotes: string | null;
                adminNotes: string | null;
                score: number | null;
                rank: number | null;
                awardedAmount: number | null;
                rejectionReason: string | null;
                remarks: string | null;
                submittedAt: Date | null;
                reviewedAt: Date | null;
                approvedAt: Date | null;
                rejectedAt: Date | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            amount: number;
            status: import(".prisma/client").$Enums.PaymentStatus;
            remarks: string | null;
            applicationId: string;
            paymentMethod: string | null;
            transactionId: string | null;
            paymentDate: Date | null;
            bankName: string | null;
            bankReference: string | null;
            upiReference: string | null;
            accountNumber: string | null;
            failureReason: string | null;
            ifscCode: string | null;
            processedAt: Date | null;
            accountHolderName: string | null;
            processedBy: string | null;
        };
    }>;
    disbursePayment(body: any, req: any): Promise<{
        success: boolean;
        message: string;
        data: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            amount: number;
            status: import(".prisma/client").$Enums.PaymentStatus;
            remarks: string | null;
            applicationId: string;
            paymentMethod: string | null;
            transactionId: string | null;
            paymentDate: Date | null;
            bankName: string | null;
            bankReference: string | null;
            upiReference: string | null;
            accountNumber: string | null;
            failureReason: string | null;
            ifscCode: string | null;
            processedAt: Date | null;
            accountHolderName: string | null;
            processedBy: string | null;
        };
    }>;
    getPayments(query: any, req: any): Promise<{
        success: boolean;
        data: ({
            application: {
                student: {
                    email: string | null;
                    firstName: string;
                    lastName: string;
                    dateOfBirth: Date;
                    gender: import(".prisma/client").$Enums.Gender;
                    phone: string | null;
                    address: string;
                    city: string;
                    state: string;
                    pincode: string;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    country: string;
                    aadharNumber: string | null;
                    panNumber: string | null;
                    fatherName: string;
                    fatherOccupation: string | null;
                    motherName: string;
                    motherOccupation: string | null;
                    familyIncome: number | null;
                    emergencyContact: string | null;
                    profileImage: string | null;
                    isVerified: boolean;
                    userId: string;
                };
                scholarship: {
                    id: string;
                    isActive: boolean;
                    createdAt: Date;
                    updatedAt: Date;
                    title: string;
                    description: string;
                    eligibilityCriteria: string;
                    amount: number;
                    maxAmount: number | null;
                    category: import(".prisma/client").$Enums.ScholarshipCategory;
                    subCategory: string | null;
                    applicationStartDate: Date;
                    applicationEndDate: Date;
                    academicYear: string;
                    maxApplications: number | null;
                    currentApplications: number;
                    requirements: import("@prisma/client/runtime/library").JsonValue | null;
                    documentsRequired: string[];
                    priority: number;
                    createdBy: string;
                };
            } & {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                studentId: string;
                scholarshipId: string;
                status: import(".prisma/client").$Enums.ApplicationStatus;
                applicationData: import("@prisma/client/runtime/library").JsonValue;
                academicInfo: import("@prisma/client/runtime/library").JsonValue | null;
                familyInfo: import("@prisma/client/runtime/library").JsonValue | null;
                financialInfo: import("@prisma/client/runtime/library").JsonValue | null;
                additionalInfo: import("@prisma/client/runtime/library").JsonValue | null;
                reviewerNotes: string | null;
                adminNotes: string | null;
                score: number | null;
                rank: number | null;
                awardedAmount: number | null;
                rejectionReason: string | null;
                remarks: string | null;
                submittedAt: Date | null;
                reviewedAt: Date | null;
                approvedAt: Date | null;
                rejectedAt: Date | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            amount: number;
            status: import(".prisma/client").$Enums.PaymentStatus;
            remarks: string | null;
            applicationId: string;
            paymentMethod: string | null;
            transactionId: string | null;
            paymentDate: Date | null;
            bankName: string | null;
            bankReference: string | null;
            upiReference: string | null;
            accountNumber: string | null;
            failureReason: string | null;
            ifscCode: string | null;
            processedAt: Date | null;
            accountHolderName: string | null;
            processedBy: string | null;
        })[];
    }>;
    getPayment(id: string, req: any): Promise<{
        success: boolean;
        data: {
            application: {
                student: {
                    email: string | null;
                    firstName: string;
                    lastName: string;
                    dateOfBirth: Date;
                    gender: import(".prisma/client").$Enums.Gender;
                    phone: string | null;
                    address: string;
                    city: string;
                    state: string;
                    pincode: string;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    country: string;
                    aadharNumber: string | null;
                    panNumber: string | null;
                    fatherName: string;
                    fatherOccupation: string | null;
                    motherName: string;
                    motherOccupation: string | null;
                    familyIncome: number | null;
                    emergencyContact: string | null;
                    profileImage: string | null;
                    isVerified: boolean;
                    userId: string;
                };
                scholarship: {
                    id: string;
                    isActive: boolean;
                    createdAt: Date;
                    updatedAt: Date;
                    title: string;
                    description: string;
                    eligibilityCriteria: string;
                    amount: number;
                    maxAmount: number | null;
                    category: import(".prisma/client").$Enums.ScholarshipCategory;
                    subCategory: string | null;
                    applicationStartDate: Date;
                    applicationEndDate: Date;
                    academicYear: string;
                    maxApplications: number | null;
                    currentApplications: number;
                    requirements: import("@prisma/client/runtime/library").JsonValue | null;
                    documentsRequired: string[];
                    priority: number;
                    createdBy: string;
                };
            } & {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                studentId: string;
                scholarshipId: string;
                status: import(".prisma/client").$Enums.ApplicationStatus;
                applicationData: import("@prisma/client/runtime/library").JsonValue;
                academicInfo: import("@prisma/client/runtime/library").JsonValue | null;
                familyInfo: import("@prisma/client/runtime/library").JsonValue | null;
                financialInfo: import("@prisma/client/runtime/library").JsonValue | null;
                additionalInfo: import("@prisma/client/runtime/library").JsonValue | null;
                reviewerNotes: string | null;
                adminNotes: string | null;
                score: number | null;
                rank: number | null;
                awardedAmount: number | null;
                rejectionReason: string | null;
                remarks: string | null;
                submittedAt: Date | null;
                reviewedAt: Date | null;
                approvedAt: Date | null;
                rejectedAt: Date | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            amount: number;
            status: import(".prisma/client").$Enums.PaymentStatus;
            remarks: string | null;
            applicationId: string;
            paymentMethod: string | null;
            transactionId: string | null;
            paymentDate: Date | null;
            bankName: string | null;
            bankReference: string | null;
            upiReference: string | null;
            accountNumber: string | null;
            failureReason: string | null;
            ifscCode: string | null;
            processedAt: Date | null;
            accountHolderName: string | null;
            processedBy: string | null;
        };
    }>;
    updatePaymentStatus(id: string, body: {
        status: string;
        notes?: string;
    }, req: any): Promise<{
        success: boolean;
        message: string;
        data: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            amount: number;
            status: import(".prisma/client").$Enums.PaymentStatus;
            remarks: string | null;
            applicationId: string;
            paymentMethod: string | null;
            transactionId: string | null;
            paymentDate: Date | null;
            bankName: string | null;
            bankReference: string | null;
            upiReference: string | null;
            accountNumber: string | null;
            failureReason: string | null;
            ifscCode: string | null;
            processedAt: Date | null;
            accountHolderName: string | null;
            processedBy: string | null;
        };
    }>;
    exportPaymentsCSV(query: any, req: any): Promise<{
        success: boolean;
        data: {
            content: string;
            filename: string;
        };
    }>;
}
